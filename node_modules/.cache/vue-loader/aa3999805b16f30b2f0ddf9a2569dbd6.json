{"remainingRequest":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test\\VueStudy\\src\\views\\Test\\Jsfn.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test\\VueStudy\\src\\views\\Test\\Jsfn.vue","mtime":1602316375933},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    name:'jsfn',\r\n    created(){\r\n        //  重复输出一个字符串\r\n        this.stradd('abc',3)\r\n        console.log('abc'.repeat(3))\r\n        let a=6;\r\n        setTimeout(()=>{\r\n            // console.log(a); //66\r\n            a=666;\r\n        },1000)\r\n        a=66;\r\n        // 函数\r\n        // (function(){\r\n        //     var a = b = 5;\r\n        // })();\r\n        // a 前面有var 是局部作用域\r\n        // b是全局\r\n        // *************************************start\r\n        String.prototype.repeatify =  function(times) {\r\n            var str = '';\r\n            for (var i = 0; i < times; i++) {\r\n                str += this;\r\n            }\r\n            return str;\r\n        };\r\n        let str2='def'.repeatify(3)\r\n        console.log(str2)\r\n        // **********************************end\r\n        console.log(this.isPrime(4))\r\n\r\n        var aa = {n:10,m:20};\r\n        var b = aa;\r\n        b.n = 30;\r\n        console.log(aa.n);\r\n        console.log(b);\r\n        console.log(this.fn3('101010000000'))\r\n    },\r\n    methods:{\r\n        stradd (str,num){\r\n            let that=this;\r\n            let strn=str;\r\n            if(num<1){\r\n                return console.log(\"\");\r\n            } else if(num===1){\r\n                return console.log(strn);\r\n            }else{\r\n                strn +=str;\r\n                num--\r\n            }\r\n            that.stradd(strn,num)\r\n        },\r\n        fn2(){\r\n            var x=1,\r\n                y=0,\r\n                z=0;\r\n            function add(n){\r\n                n=n+1;\r\n            }\r\n            y=add(x); 2\r\n            z=x+y;3\r\n            console.log(\"y1:\"+y);2\r\n            console.log(\"z1:\"+z);3\r\n\r\n            function add(n){\r\n                n=n+3;\r\n            }\r\n            y=add(x);4\r\n            z=x+y;5\r\n            console.log(\"y2:\"+y);\r\n            console.log(\"z2:\"+z);\r\n        },\r\n        isPrime(num){ //是不是质数\r\n            if(typeof num !==\"number\" || !Number.isInteger(num)){\r\n                return false;\r\n            }\r\n            if(num<2){\r\n                return false;\r\n            }\r\n             if(num===2){\r\n                return true;\r\n            }else if(num % 2 ===0){\r\n                return false;\r\n            }\r\n            let gen=Math.sprt(num);//不需要检查比输入数字的开方还要大的数字  3<2\r\n            for(var i=3;i<=gen;i+=2){\r\n                if(num%i===0){\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        fn3(n){354\r\n            if(!/^([1-9]\\d*)/.test(n)){\r\n                return '非法数据';\r\n            }\r\n            var unit = '千百十亿千百十万千百十个';\r\n            if(n.length > unit.length){\r\n                return '数据过长';   str.charAt('a')\r\n            }\r\n            var newStr = '';\r\n            var nlength = n.length;   //3\r\n            unit = unit.substr(unit.length - nlength);  //12-3=9-> 百十个 \r\n            for(var i = 0; i < nlength; i++){     \r\n                newStr += '零一二三四五六七八九'.charAt(n[i]) + unit.charAt(i);  \r\n            }\r\n            newStr = newStr.substr(0,newStr.length-1);\r\n            newStr = newStr.replace(/零(千|百|十)/g,'零').replace(/(零)+/g,'零').replace(/零(亿|万)/g,'$1');\r\n            return newStr;\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["Jsfn.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Jsfn.vue","sourceRoot":"src/views/Test","sourcesContent":["<template>\r\n    <div>\r\n        <div>js</div>\r\n        <ul>\r\n            <li>重复输出一个字符串 repeat</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name:'jsfn',\r\n    created(){\r\n        //  重复输出一个字符串\r\n        this.stradd('abc',3)\r\n        console.log('abc'.repeat(3))\r\n        let a=6;\r\n        setTimeout(()=>{\r\n            // console.log(a); //66\r\n            a=666;\r\n        },1000)\r\n        a=66;\r\n        // 函数\r\n        // (function(){\r\n        //     var a = b = 5;\r\n        // })();\r\n        // a 前面有var 是局部作用域\r\n        // b是全局\r\n        // *************************************start\r\n        String.prototype.repeatify =  function(times) {\r\n            var str = '';\r\n            for (var i = 0; i < times; i++) {\r\n                str += this;\r\n            }\r\n            return str;\r\n        };\r\n        let str2='def'.repeatify(3)\r\n        console.log(str2)\r\n        // **********************************end\r\n        console.log(this.isPrime(4))\r\n\r\n        var aa = {n:10,m:20};\r\n        var b = aa;\r\n        b.n = 30;\r\n        console.log(aa.n);\r\n        console.log(b);\r\n        console.log(this.fn3('101010000000'))\r\n    },\r\n    methods:{\r\n        stradd (str,num){\r\n            let that=this;\r\n            let strn=str;\r\n            if(num<1){\r\n                return console.log(\"\");\r\n            } else if(num===1){\r\n                return console.log(strn);\r\n            }else{\r\n                strn +=str;\r\n                num--\r\n            }\r\n            that.stradd(strn,num)\r\n        },\r\n        fn2(){\r\n            var x=1,\r\n                y=0,\r\n                z=0;\r\n            function add(n){\r\n                n=n+1;\r\n            }\r\n            y=add(x); 2\r\n            z=x+y;3\r\n            console.log(\"y1:\"+y);2\r\n            console.log(\"z1:\"+z);3\r\n\r\n            function add(n){\r\n                n=n+3;\r\n            }\r\n            y=add(x);4\r\n            z=x+y;5\r\n            console.log(\"y2:\"+y);\r\n            console.log(\"z2:\"+z);\r\n        },\r\n        isPrime(num){ //是不是质数\r\n            if(typeof num !==\"number\" || !Number.isInteger(num)){\r\n                return false;\r\n            }\r\n            if(num<2){\r\n                return false;\r\n            }\r\n             if(num===2){\r\n                return true;\r\n            }else if(num % 2 ===0){\r\n                return false;\r\n            }\r\n            let gen=Math.sprt(num);//不需要检查比输入数字的开方还要大的数字  3<2\r\n            for(var i=3;i<=gen;i+=2){\r\n                if(num%i===0){\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        fn3(n){354\r\n            if(!/^([1-9]\\d*)/.test(n)){\r\n                return '非法数据';\r\n            }\r\n            var unit = '千百十亿千百十万千百十个';\r\n            if(n.length > unit.length){\r\n                return '数据过长';   str.charAt('a')\r\n            }\r\n            var newStr = '';\r\n            var nlength = n.length;   //3\r\n            unit = unit.substr(unit.length - nlength);  //12-3=9-> 百十个 \r\n            for(var i = 0; i < nlength; i++){     \r\n                newStr += '零一二三四五六七八九'.charAt(n[i]) + unit.charAt(i);  \r\n            }\r\n            newStr = newStr.substr(0,newStr.length-1);\r\n            newStr = newStr.replace(/零(千|百|十)/g,'零').replace(/(零)+/g,'零').replace(/零(亿|万)/g,'$1');\r\n            return newStr;\r\n        }\r\n    }\r\n}\r\n</script>"]}]}