{"remainingRequest":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test\\VueStudy\\src\\views\\Test\\Draggable.vue?vue&type=template&id=582f5e2c&scoped=true&","dependencies":[{"path":"E:\\test\\VueStudy\\src\\views\\Test\\Draggable.vue","mtime":1602316375933},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"dragg\" }, [\n    _c(\"div\", { staticClass: \"draggLeft\" }, [\n      _c(\"ul\", { staticClass: \"moduleList\" }, [\n        _c(\n          \"li\",\n          {\n            staticClass: \"modeText\",\n            attrs: { draggable: \"true\" },\n            on: {\n              dragstart: function($event) {\n                return _vm.handleDragStart($event, \"span\")\n              }\n            }\n          },\n          [_vm._v(\"文本\")]\n        ),\n        _c(\n          \"li\",\n          {\n            attrs: { draggable: \"true\" },\n            on: {\n              dragstart: function($event) {\n                return _vm.handleDragStart($event, \"input\")\n              }\n            }\n          },\n          [_vm._v(\"输入框\")]\n        )\n      ])\n    ]),\n    _c(\n      \"div\",\n      {\n        staticClass: \"draggRight\",\n        attrs: { id: \"draggRight\" },\n        on: {\n          drop: function($event) {\n            $event.stopPropagation()\n            $event.preventDefault()\n            return _vm.handleDropOnCanvas($event)\n          },\n          dragover: function($event) {\n            $event.stopPropagation()\n            $event.preventDefault()\n          }\n        }\n      },\n      _vm._l(_vm.selectionStyleMap, function(item, index) {\n        return _c(\n          \"div\",\n          {\n            key: index,\n            style: item.style,\n            attrs: { draggable: \"true\" },\n            on: {\n              dragstart: function($event) {\n                return _vm.handleDragStartDome(item, $event)\n              },\n              dragover: function($event) {\n                $event.stopPropagation()\n                $event.preventDefault()\n              }\n            },\n            nativeOn: {\n              click: function($event) {\n                $event.stopPropagation()\n                $event.preventDefault()\n                return _vm.handleComponentTrigger(_vm.childNode)\n              },\n              drop: function($event) {\n                $event.stopPropagation()\n                $event.preventDefault()\n                return _vm.handleDropOnNode(item, $event)\n              }\n            }\n          },\n          [\n            item.type == \"input\"\n              ? _c(\"input\", { attrs: { placeholder: \"请输入\", type: \"text\" } })\n              : _vm._e(),\n            item.type == \"span\"\n              ? _c(\n                  \"span\",\n                  {\n                    staticStyle: { outline: \"none\" },\n                    attrs: { contenteditable: \"true\" }\n                  },\n                  [_vm._v(\"文本\")]\n                )\n              : _vm._e()\n          ]\n        )\n      }),\n      0\n    ),\n    _c(\"div\", { staticClass: \"styleBox\" }, [\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"宽：\"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.widthVal,\n                expression: \"widthVal\"\n              }\n            ],\n            attrs: { type: \"number\" },\n            domProps: { value: _vm.widthVal },\n            on: {\n              input: [\n                function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.widthVal = $event.target.value\n                },\n                function($event) {\n                  return _vm.changeWidth($event)\n                }\n              ],\n              focus: _vm.getWidth\n            }\n          })\n        ]),\n        _vm._m(0)\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _vm._v(\"高：\"),\n      _c(\"input\", { attrs: { type: \"number\" } })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}