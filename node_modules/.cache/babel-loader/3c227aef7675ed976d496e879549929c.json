{"remainingRequest":"E:\\test\\VueStudy\\node_modules\\babel-loader\\lib\\index.js!E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test\\VueStudy\\src\\views\\Test\\Draggable.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test\\VueStudy\\src\\views\\Test\\Draggable.vue","mtime":1602316375933},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"E:\\\\test\\\\VueStudy\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport modeDiv from \"../../components/modeDiv.vue\";\nexport default {\n  name: 'draggable',\n  data: function data() {\n    return {\n      nodeNum: 0,\n      selectionStyleMap: [],\n      isDown: false,\n      //鼠标是否按下,\n      nodeId: '',\n      widthVal: 100\n    };\n  },\n  components: {\n    modeDiv: modeDiv\n  },\n  methods: {\n    handleComponentTrigger: function handleComponentTrigger() {\n      console.log('点击');\n    },\n    handleDragStartDome: function handleDragStartDome(node, event) {\n      var start = {\n        left: event.offsetX,\n        top: event.offsetY\n      };\n      node.start = _objectSpread({}, start);\n      event.dataTransfer.setData('node', JSON.stringify(node));\n      console.log(event);\n    },\n    handleDropOnNode: function handleDropOnNode(node, event) {\n      console.log('拖动结束');\n      var offsetX = event.offsetX;\n      var offsetY = event.offsetY;\n      var style = {\n        position: 'absolute',\n        'pointer-events': 'auto',\n        left: offsetX + 'px',\n        top: offsetY + 'px'\n      };\n      event.style = style;\n    },\n    handleDragStart: function handleDragStart(event, type) {\n      var _t = this;\n\n      this.nodeNum++; // 拖拽的节点数据\n\n      var nodeInfo = {\n        id: 'node-' + this.nodeNum,\n        innerHTML: '',\n        type: type,\n        start: {\n          left: event.offsetX,\n          top: event.offsetY\n        }\n      };\n      event.dataTransfer.setData('node', JSON.stringify(nodeInfo));\n      console.log(event);\n    },\n    handleDropOnCanvas: function handleDropOnCanvas(event) {\n      //拖拽结束\n      var that = this; // console.log(event.offsetX)\n\n      var nodeInfo = JSON.parse(event.dataTransfer.getData('node'));\n      this.nodeId = nodeInfo.id;\n      var offsetX = event.offsetX - nodeInfo.start.left;\n      var offsetY = event.offsetY - nodeInfo.start.top;\n      var style = {\n        position: 'absolute',\n        'pointer-events': 'auto',\n        left: offsetX + 'px',\n        top: offsetY + 'px',\n        width: '100px',\n        height: '30px'\n      };\n      nodeInfo.style = _objectSpread({}, style);\n\n      if (this.selectionStyleMap.length) {\n        // 判断该节点是否已存在\n        var nodeIndex = this.selectionStyleMap.findIndex(function (node) {\n          return node.id === nodeInfo.id;\n        });\n\n        if (nodeIndex > -1) {\n          nodeInfo.style.width = that.selectionStyleMap[nodeIndex].style.width;\n          this.selectionStyleMap.splice(nodeIndex, 1, nodeInfo);\n        } else {\n          this.selectionStyleMap.push(nodeInfo);\n        }\n      } else {\n        this.selectionStyleMap.push(nodeInfo);\n      }\n    },\n    getWidth: function getWidth() {\n      var _this = this;\n\n      var nodeIndex = this.selectionStyleMap.findIndex(function (node) {\n        return node.id === _this.nodeId;\n      });\n      var widthVal = this.selectionStyleMap[nodeIndex].style.width;\n      this.widthVal = widthVal.replace(/px/, \"\");\n    },\n    changeWidth: function changeWidth(event) {\n      var _this2 = this;\n\n      var nodeIndex = this.selectionStyleMap.findIndex(function (node) {\n        return node.id === _this2.nodeId;\n      });\n      var widthVal = this.selectionStyleMap[nodeIndex].style.width; // console.log(widthVal.replace(/px/, \"\"))\n\n      var newNode = this.selectionStyleMap[nodeIndex];\n      newNode.style.width = event.target.value + 'px';\n      this.selectionStyleMap.splice(nodeIndex, 1, newNode);\n    }\n  }\n};",{"version":3,"sources":["Draggable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"dragg\">\r\n\t\t<div class=\"draggLeft\">\r\n\t\t\t<ul class=\"moduleList\">\r\n\t\t\t\t<li class=\"modeText\"  draggable=\"true\" @dragstart=\"handleDragStart($event,'span')\"   >文本</li>\r\n\t\t\t\t<li draggable=\"true\" @dragstart=\"handleDragStart($event,'input')\">输入框</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t\t<div class=\"draggRight\" id=\"draggRight\"  @drop.stop.prevent=\"handleDropOnCanvas($event)\"\r\n            @dragover.stop.prevent\r\n            >\r\n                <div v-for=\"(item,index) in selectionStyleMap\" :key=\"index\"\r\n                    draggable=\"true\"\r\n                    :style=\"item.style\"\r\n                    @click.native.stop.prevent=\"handleComponentTrigger(childNode)\"\r\n                    @dragstart=\"handleDragStartDome(item,$event)\"\r\n\r\n                    @drop.native.stop.prevent=\"handleDropOnNode(item, $event)\"\r\n                    @dragover.stop.prevent\r\n                >\r\n                    \r\n                    <input v-if=\"item.type=='input'\" placeholder=\"请输入\" type=\"text\">\r\n                    <span v-if=\"item.type=='span'\" contenteditable=\"true\" style=\"outline:none;\">文本</span>\r\n                </div>\r\n\t\t</div>\r\n        <div class=\"styleBox\">\r\n            <ul>\r\n                <li>宽：<input type=\"number\" @input=\"changeWidth($event)\" v-model=\"widthVal\" @focus=\"getWidth\" ></li>\r\n                <li>高：<input type=\"number\" ></li>\r\n            </ul>\r\n        </div>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport modeDiv from '../../components/modeDiv.vue'\r\nexport default {\r\n\tname:'draggable',\r\n\tdata(){\r\n\t\treturn{\r\n            nodeNum:0,\r\n            selectionStyleMap:[],\r\n            isDown:false,//鼠标是否按下,\r\n            nodeId:'',\r\n            widthVal:100\r\n\t\t}\r\n\t},\r\n\tcomponents:{modeDiv},\r\n\tmethods:{\r\n        \r\n        handleComponentTrigger(){\r\n            console.log('点击')\r\n        },\r\n        handleDragStartDome(node, event){\r\n            let start={\r\n                left:event.offsetX,\r\n                top:event.offsetY\r\n            }\r\n            node.start={...start};\r\n            event.dataTransfer.setData('node', JSON.stringify(node));\r\n            console.log(event)\r\n        },\r\n        handleDropOnNode(node,event){\r\n            console.log('拖动结束')\r\n            let offsetX = event.offsetX\r\n            let offsetY = event.offsetY\r\n            let style = {\r\n                position: 'absolute',\r\n                'pointer-events': 'auto',\r\n                left: offsetX + 'px',\r\n                top: offsetY + 'px',\r\n                \r\n            }\r\n            event.style=style;\r\n        },\r\n        handleDragStart: function (event,type) {\r\n            let _t = this\r\n            this.nodeNum++\r\n            // 拖拽的节点数据\r\n            let nodeInfo = {\r\n                id: 'node-' +this.nodeNum,\r\n                innerHTML: '',\r\n                type:type,\r\n                start:{\r\n                    left:event.offsetX,\r\n                    top:event.offsetY\r\n                }\r\n            }\r\n            event.dataTransfer.setData('node', JSON.stringify(nodeInfo))\r\n            console.log(event)\r\n        },\r\n        handleDropOnCanvas(event){ //拖拽结束\r\n            let that=this;\r\n            // console.log(event.offsetX)\r\n            let nodeInfo=JSON.parse(event.dataTransfer.getData('node'));\r\n            \r\n            this.nodeId=nodeInfo.id;\r\n            let offsetX = event.offsetX - nodeInfo.start.left;\r\n            let offsetY = event.offsetY-nodeInfo.start.top;\r\n            let style = {\r\n                position: 'absolute',\r\n                'pointer-events': 'auto',\r\n                left: offsetX + 'px',\r\n                top: offsetY + 'px',\r\n                width:'100px',\r\n                height:'30px'\r\n            }\r\n            \r\n            nodeInfo.style={...style}\r\n            if (this.selectionStyleMap.length) {\r\n                // 判断该节点是否已存在\r\n                let nodeIndex = this.selectionStyleMap.findIndex(node => node.id === nodeInfo.id)\r\n                if(nodeIndex>-1){\r\n                    nodeInfo.style.width=that.selectionStyleMap[nodeIndex].style.width;\r\n                    this.selectionStyleMap.splice(nodeIndex,1,nodeInfo) ;\r\n                }else{\r\n                    this.selectionStyleMap.push(nodeInfo) \r\n                }\r\n            }else{\r\n                this.selectionStyleMap.push(nodeInfo) \r\n            }\r\n        },\r\n        getWidth(){\r\n            let nodeIndex = this.selectionStyleMap.findIndex(node => node.id === this.nodeId)\r\n            let widthVal=this.selectionStyleMap[nodeIndex].style.width;\r\n            this.widthVal=widthVal.replace(/px/, \"\")\r\n        },\r\n        changeWidth(event){\r\n            let nodeIndex = this.selectionStyleMap.findIndex(node => node.id === this.nodeId)\r\n            let widthVal=this.selectionStyleMap[nodeIndex].style.width;\r\n            // console.log(widthVal.replace(/px/, \"\"))\r\n            let newNode=this.selectionStyleMap[nodeIndex];\r\n            newNode.style.width=event.target.value + 'px'\r\n            this.selectionStyleMap.splice(nodeIndex,1,newNode);\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n.dragg{\r\n\tdisplay:flex;\r\n\twidth:100%;\r\n\theight :100%;\r\n\tposition relative\r\n}\r\n.draggLeft{\r\n\twidth:20%;\r\n\theight :100%;\r\n\tborder-right :1px solid #ccc;\r\n\tbox-sizing:border-box;\r\n}\r\n.draggRight{\r\n\twidth:60%;\r\n\theight :100%;\r\n\tborder-right :1px solid #ccc;\r\n    position :relative;\r\n}\r\n.draggRight div{\r\n\tborder:1px solid #ccc;\r\n\t// width:100px;\r\n\t// height:30px;\r\n}\r\n.draggRight div input{\r\n\tborder:none;\r\n    height:28px;\r\n    width:100%;\r\n}\r\n.draggRight div span{\r\n    display:inline-block;\r\n    height:28px;\r\n    width:100%;\r\n    line-height:28px;\r\n}\r\n.moduleList{\r\n\tpadding-top:10px;\r\n}\r\n.moduleList li{\r\n\tdisplay:inline-block;\r\n\theight:30px;\r\n\tline-height :30px;\r\n\tborder:1px solid #ccc;\r\n\twidth :100px;\r\n\tcursor pointer;\r\n\tmargin :0 10px;\r\n\ttext-align:center;\r\n}\r\n.modeText{\r\n\tposition:relative;\r\n}\r\n.styleBox{\r\n    float:left;\r\n    width:20%;\r\n}\r\n.styleBox ul{\r\n    padding-top:10px;\r\n}\r\n.styleBox ul li{\r\n    margin-bottom:10px;\r\n}\r\n.styleBox ul li input{\r\n    border:1px solid #ccc;\r\n}\r\n</style>"],"sourceRoot":"src/views/Test"}]}