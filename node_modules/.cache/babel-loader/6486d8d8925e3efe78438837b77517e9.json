{"remainingRequest":"E:\\test\\VueStudy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\test\\VueStudy\\node_modules\\babel-loader\\lib\\index.js!E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test\\VueStudy\\src\\views\\Test\\Jsfn.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test\\VueStudy\\src\\views\\Test\\Jsfn.vue","mtime":1602316375933},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test\\VueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\nimport \"core-js/modules/es6.string.repeat\";\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'jsfn',\n  created: function created() {\n    //  重复输出一个字符串\n    this.stradd('abc', 3);\n    console.log('abc'.repeat(3));\n    var a = 6;\n    setTimeout(function () {\n      // console.log(a); //66\n      a = 666;\n    }, 1000);\n    a = 66; // 函数\n    // (function(){\n    //     var a = b = 5;\n    // })();\n    // a 前面有var 是局部作用域\n    // b是全局\n    // *************************************start\n\n    String.prototype.repeatify = function (times) {\n      var str = '';\n\n      for (var i = 0; i < times; i++) {\n        str += this;\n      }\n\n      return str;\n    };\n\n    var str2 = 'def'.repeatify(3);\n    console.log(str2); // **********************************end\n\n    console.log(this.isPrime(4));\n    var aa = {\n      n: 10,\n      m: 20\n    };\n    var b = aa;\n    b.n = 30;\n    console.log(aa.n);\n    console.log(b);\n    console.log(this.fn3('101010000000'));\n  },\n  methods: {\n    stradd: function stradd(str, num) {\n      var that = this;\n      var strn = str;\n\n      if (num < 1) {\n        return console.log(\"\");\n      } else if (num === 1) {\n        return console.log(strn);\n      } else {\n        strn += str;\n        num--;\n      }\n\n      that.stradd(strn, num);\n    },\n    fn2: function fn2() {\n      var x = 1,\n          y = 0,\n          z = 0;\n\n      function add(n) {\n        n = n + 1;\n      }\n\n      y = add(x);\n      2;\n      z = x + y;\n      3;\n      console.log(\"y1:\" + y);\n      2;\n      console.log(\"z1:\" + z);\n      3;\n\n      function add(n) {\n        n = n + 3;\n      }\n\n      y = add(x);\n      4;\n      z = x + y;\n      5;\n      console.log(\"y2:\" + y);\n      console.log(\"z2:\" + z);\n    },\n    isPrime: function isPrime(num) {\n      //是不是质数\n      if (typeof num !== \"number\" || !Number.isInteger(num)) {\n        return false;\n      }\n\n      if (num < 2) {\n        return false;\n      }\n\n      if (num === 2) {\n        return true;\n      } else if (num % 2 === 0) {\n        return false;\n      }\n\n      var gen = Math.sprt(num); //不需要检查比输入数字的开方还要大的数字  3<2\n\n      for (var i = 3; i <= gen; i += 2) {\n        if (num % i === 0) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    fn3: function fn3(n) {\n      354;\n\n      if (!/^([1-9]\\d*)/.test(n)) {\n        return '非法数据';\n      }\n\n      var unit = '千百十亿千百十万千百十个';\n\n      if (n.length > unit.length) {\n        return '数据过长';\n        str.charAt('a');\n      }\n\n      var newStr = '';\n      var nlength = n.length; //3\n\n      unit = unit.substr(unit.length - nlength); //12-3=9-> 百十个 \n\n      for (var i = 0; i < nlength; i++) {\n        newStr += '零一二三四五六七八九'.charAt(n[i]) + unit.charAt(i);\n      }\n\n      newStr = newStr.substr(0, newStr.length - 1);\n      newStr = newStr.replace(/零(千|百|十)/g, '零').replace(/(零)+/g, '零').replace(/零(亿|万)/g, '$1');\n      return newStr;\n    }\n  }\n};",{"version":3,"sources":["Jsfn.vue"],"names":[],"mappings":";;;;;;;;;;;;AASA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,OAFA,qBAEA;AACA;AACA,SAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,MAAA,MAAA,CAAA,CAAA,CAAA;AACA,QAAA,CAAA,GAAA,CAAA;AACA,IAAA,UAAA,CAAA,YAAA;AACA;AACA,MAAA,CAAA,GAAA,GAAA;AACA,KAHA,EAGA,IAHA,CAAA;AAIA,IAAA,CAAA,GAAA,EAAA,CATA,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAA,KAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,GAAA,IAAA,IAAA;AACA;;AACA,aAAA,GAAA;AACA,KANA;;AAOA,QAAA,IAAA,GAAA,MAAA,SAAA,CAAA,CAAA,CAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAzBA,CA0BA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AAEA,QAAA,EAAA,GAAA;AAAA,MAAA,CAAA,EAAA,EAAA;AAAA,MAAA,CAAA,EAAA;AAAA,KAAA;AACA,QAAA,CAAA,GAAA,EAAA;AACA,IAAA,CAAA,CAAA,CAAA,GAAA,EAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,cAAA,CAAA;AACA,GArCA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA,GADA,EACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,IAAA,GAAA,GAAA;;AACA,UAAA,GAAA,GAAA,CAAA,EAAA;AACA,eAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA;AACA,OAFA,MAEA,IAAA,GAAA,KAAA,CAAA,EAAA;AACA,eAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,IAAA,IAAA,GAAA;AACA,QAAA,GAAA;AACA;;AACA,MAAA,IAAA,CAAA,MAAA,CAAA,IAAA,EAAA,GAAA;AACA,KAbA;AAcA,IAAA,GAdA,iBAcA;AACA,UAAA,CAAA,GAAA,CAAA;AAAA,UACA,CAAA,GAAA,CADA;AAAA,UAEA,CAAA,GAAA,CAFA;;AAGA,eAAA,GAAA,CAAA,CAAA,EAAA;AACA,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,MAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA;AAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA;AAAA;;AAEA,eAAA,GAAA,CAAA,CAAA,EAAA;AACA,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,MAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA;AACA,KAjCA;AAkCA,IAAA,OAlCA,mBAkCA,GAlCA,EAkCA;AAAA;AACA,UAAA,OAAA,GAAA,KAAA,QAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,GAAA,GAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,GAAA,KAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA,IAAA,GAAA,GAAA,CAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAZA,CAYA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,IAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,YAAA,GAAA,GAAA,CAAA,KAAA,CAAA,EAAA;AACA,iBAAA,KAAA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KArDA;AAsDA,IAAA,GAtDA,eAsDA,CAtDA,EAsDA;AAAA;;AACA,UAAA,CAAA,cAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,MAAA;AACA;;AACA,UAAA,IAAA,GAAA,cAAA;;AACA,UAAA,CAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,EAAA;AACA,eAAA,MAAA;AAAA,QAAA,GAAA,CAAA,MAAA,CAAA,GAAA;AACA;;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,OAAA,GAAA,CAAA,CAAA,MAAA,CATA,CASA;;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,OAAA,CAAA,CAVA,CAUA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,MAAA,IAAA,aAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA;;AACA,MAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,MAAA,MAAA,GAAA,MAAA,CAAA,OAAA,CAAA,WAAA,EAAA,GAAA,EAAA,OAAA,CAAA,OAAA,EAAA,GAAA,EAAA,OAAA,CAAA,SAAA,EAAA,IAAA,CAAA;AACA,aAAA,MAAA;AACA;AAvEA;AAtCA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <div>js</div>\r\n        <ul>\r\n            <li>重复输出一个字符串 repeat</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name:'jsfn',\r\n    created(){\r\n        //  重复输出一个字符串\r\n        this.stradd('abc',3)\r\n        console.log('abc'.repeat(3))\r\n        let a=6;\r\n        setTimeout(()=>{\r\n            // console.log(a); //66\r\n            a=666;\r\n        },1000)\r\n        a=66;\r\n        // 函数\r\n        // (function(){\r\n        //     var a = b = 5;\r\n        // })();\r\n        // a 前面有var 是局部作用域\r\n        // b是全局\r\n        // *************************************start\r\n        String.prototype.repeatify =  function(times) {\r\n            var str = '';\r\n            for (var i = 0; i < times; i++) {\r\n                str += this;\r\n            }\r\n            return str;\r\n        };\r\n        let str2='def'.repeatify(3)\r\n        console.log(str2)\r\n        // **********************************end\r\n        console.log(this.isPrime(4))\r\n\r\n        var aa = {n:10,m:20};\r\n        var b = aa;\r\n        b.n = 30;\r\n        console.log(aa.n);\r\n        console.log(b);\r\n        console.log(this.fn3('101010000000'))\r\n    },\r\n    methods:{\r\n        stradd (str,num){\r\n            let that=this;\r\n            let strn=str;\r\n            if(num<1){\r\n                return console.log(\"\");\r\n            } else if(num===1){\r\n                return console.log(strn);\r\n            }else{\r\n                strn +=str;\r\n                num--\r\n            }\r\n            that.stradd(strn,num)\r\n        },\r\n        fn2(){\r\n            var x=1,\r\n                y=0,\r\n                z=0;\r\n            function add(n){\r\n                n=n+1;\r\n            }\r\n            y=add(x); 2\r\n            z=x+y;3\r\n            console.log(\"y1:\"+y);2\r\n            console.log(\"z1:\"+z);3\r\n\r\n            function add(n){\r\n                n=n+3;\r\n            }\r\n            y=add(x);4\r\n            z=x+y;5\r\n            console.log(\"y2:\"+y);\r\n            console.log(\"z2:\"+z);\r\n        },\r\n        isPrime(num){ //是不是质数\r\n            if(typeof num !==\"number\" || !Number.isInteger(num)){\r\n                return false;\r\n            }\r\n            if(num<2){\r\n                return false;\r\n            }\r\n             if(num===2){\r\n                return true;\r\n            }else if(num % 2 ===0){\r\n                return false;\r\n            }\r\n            let gen=Math.sprt(num);//不需要检查比输入数字的开方还要大的数字  3<2\r\n            for(var i=3;i<=gen;i+=2){\r\n                if(num%i===0){\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        fn3(n){354\r\n            if(!/^([1-9]\\d*)/.test(n)){\r\n                return '非法数据';\r\n            }\r\n            var unit = '千百十亿千百十万千百十个';\r\n            if(n.length > unit.length){\r\n                return '数据过长';   str.charAt('a')\r\n            }\r\n            var newStr = '';\r\n            var nlength = n.length;   //3\r\n            unit = unit.substr(unit.length - nlength);  //12-3=9-> 百十个 \r\n            for(var i = 0; i < nlength; i++){     \r\n                newStr += '零一二三四五六七八九'.charAt(n[i]) + unit.charAt(i);  \r\n            }\r\n            newStr = newStr.substr(0,newStr.length-1);\r\n            newStr = newStr.replace(/零(千|百|十)/g,'零').replace(/(零)+/g,'零').replace(/零(亿|万)/g,'$1');\r\n            return newStr;\r\n        }\r\n    }\r\n}\r\n</script>"],"sourceRoot":"src/views/Test"}]}